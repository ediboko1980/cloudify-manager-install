
1. Setup
	- Add the circle artifacts token envvar, export CLOUDIFY_PREMIUM_CIRCLE_ARTIFACTS_TOKEN=...
	- Create cloudify-manager-install/premium.pem with the premium deploy key
	- cwd into cloudify-manager-install
	- mkdir rpms && chmod a+w rpms && mkdir pex && chmod a+w pex

2. Download component rpms built on circleci
	mkdir rpms
	pushd rpms
		CIRCLE_BRANCH=supervisord-docker-image-1 ../.circleci/fetch_rpms
	popd

3. Build the cfy_manager executable
	docker run \
		--rm --privileged \
		-v $(pwd):/tmp/cloudify-manager-install:rw \
		-v $(pwd)/pex:/tmp/output:rw \
		python:2 \
		bash -c '
			pip install pex==1.3.2 && \
			pex /tmp/cloudify-manager-install -o /tmp/output/cfy_manager -m cfy_manager.main --disable-cache \
		'
4. Build the rpm
docker run \
	--privileged \
	--rm \
	-v $(pwd):/tmp/cloudify-manager-install:rw \
	rpmbuild/centos7 \
	bash /tmp/cloudify-manager-install/packaging/build.sh

5. Build the docker image
	- Move the built rpm into packaging/new_docker
	docker build -t cloudify-manager --build-arg rpm_file=cloudify-manager-install-5.0.5-.dev1.el7.centos.x86_64.rpm .

6. Build the queue image
	- The same manager AIO image can be used as well

7. Run the containers
    pushd .circleci/new_docker
      docker run --name postgres -e POSTGRES_USER=postgres -e POSTGRES_DB=postgres -e POSTGRES_PASSWORD=postgres -d postgres
      docker run --name cloudify-manager-queue -d -v $(pwd)/config_queue.yaml:/etc/cloudify/config.yaml cloudify-manager-queue
      sleep 10
      docker cp cloudify-manager-queue:/etc/cloudify/ssl/rabbitmq-cert.pem rabbitmq-cert.pem
      docker run --name cloudify-manager -v $(pwd)/config.yaml:/tmp/config.yaml -d -v $(pwd)/rabbitmq-cert.pem:/tmp/rabbitmq-cert.pem --cap-drop SETUID --cap-drop SETGID --cap-drop NET_BIND_SERVICE --security-opt no-new-privileges cloudify-manager
      sleep 60
      docker exec -it cloudify-manager tail /var/log/cloudify/manager/cfy_manager.log
      docker cp cloudify-manager:/etc/cloudify/ssl/cloudify_internal_ca_cert.pem ca.pem
      docker cp cloudify-manager:/etc/cloudify/ssl/cloudify_internal_ca_key.pem ca_key.pem
      docker run --name cloudify-manager-2 -v $(pwd)/config2.yaml:/tmp/config.yaml -d -v $(pwd)/rabbitmq-cert.pem:/tmp/rabbitmq-cert.pem -v $(pwd)/ca.pem:/tmp/ca.pem -v $(pwd)/ca_key.pem:/tmp/ca_key.pem --cap-drop SETUID --cap-drop SETGID --cap-drop NET_BIND_SERVICE --security-opt no-new-privileges cloudify-manager
      sleep 60
      docker exec -it cloudify-manager-2 tail /var/log/cloudify/manager/cfy_manager.log
    popd
